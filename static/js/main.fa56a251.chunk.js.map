{"version":3,"sources":["component/ColorCard.js","component/NavBar.js","component/SideBar.js","component/ColorList.js","App.js","reportWebVitals.js","index.js"],"names":["ColorCard","color","title","useState","hover","setHover","className","style","background","opacity","onMouseOver","onMouseLeave","NavBar","onchange","src","placeholder","onChange","e","target","value","SideBar","ColorList","colorList","setColorList","useEffect","colorListJson","val","length","Grid","container","spacing","map","item","xs","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gxCAEaA,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAC1B,GAD6C,EAAZC,MACPC,oBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACE,qBAAKC,UAAU,iBAAf,SACE,qBACEA,UAAU,aACVC,MAAO,CAAEC,WAAW,GAAD,OAAKP,GAASQ,QAAQ,GAAD,OAAKL,EAAQ,GAAM,IAC3DM,YAAa,kBAAML,GAAS,IAC5BM,aAAc,kBAAMN,GAAS,IAJ/B,SAMGD,GAASH,OCVLW,G,MAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,sBAAKP,UAAU,MAAf,UACE,qBAAKQ,IAAI,sBACT,uBACEC,YAAY,oBACZC,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAOC,e,QCL9BC,G,MAAU,WACrB,OAAO,qBAAKd,UAAU,qBCIXe,G,MAAY,WACvB,MAAkClB,mBAAS,IAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KAIA,OAHAC,qBAAU,WACRD,EAAaE,KACZ,IAED,qCACE,cAAC,EAAD,CACEZ,SAAU,SAACa,GAAD,OACO,IAAfA,EAAIC,QAAgBJ,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAErB,MAAOyB,SAG7D,sBAAKpB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAACsB,EAAA,EAAD,CAAMrB,MAAO,CAAE,aAAc,OAASsB,WAAS,EAACC,QAAS,EAAzD,SACGR,EAAUS,KAAI,SAAC9B,GAAD,OACb,cAAC2B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAWhC,MAAOA,EAAMA,MAAOC,MAAOD,EAAMC,eAKlD,cAAC,EAAD,Y,MCnBOgC,MARf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,OCMS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa56a251.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/colorCard.css\";\nexport const ColorCard = ({ color, title }) => {\n  const [hover, setHover] = useState(false);\n  return (\n    <div className=\"container-card\">\n      <div\n        className=\"color-card\"\n        style={{ background: `${color}`, opacity: `${hover ? 0.5 : 1}` }}\n        onMouseOver={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        {hover && color}\n      </div>\n      {/* <div className=\"color-title\">{title}</div> */}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"../styles/navBar.css\";\nexport const NavBar = ({ onchange }) => {\n  return (\n    <div className=\"nav\">\n      <img src=\"/colorPallete.png\" />\n      <input\n        placeholder=\"    type here ...\"\n        onChange={(e) => onchange(e.target.value)}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"../styles/sideBar.css\";\n\nexport const SideBar = () => {\n  return <div className=\"side-container\"></div>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport colorListJson from \"../color-data.json\";\nimport { ColorCard } from \"./ColorCard\";\nimport { NavBar } from \"./NavBar\";\nimport Grid from \"@mui/material/Grid\";\nimport { SideBar } from \"./SideBar\";\nimport \"../styles/colorList.css\";\n\nexport const ColorList = () => {\n  const [colorList, setColorList] = useState([]);\n  useEffect(() => {\n    setColorList(colorListJson);\n  }, []);\n  return (\n    <>\n      <NavBar\n        onchange={(val) =>\n          val.length === 7 && setColorList([...colorList, { color: val }])\n        }\n      />\n      <div className=\"container\">\n        <SideBar />\n        <Grid style={{ \"margin-top\": \"3px\" }} container spacing={3}>\n          {colorList.map((color) => (\n            <Grid item xs={4}>\n              <ColorCard color={color.color} title={color.title} />\n            </Grid>\n          ))}\n        </Grid>\n\n        <SideBar />\n      </div>\n    </>\n  );\n};\n","import { ColorList } from \"./component/ColorList\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ColorList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}